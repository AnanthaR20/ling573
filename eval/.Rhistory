source("~/github/ling573/eval/get_fkre_quantile_reps.R")
setwd("~/github/ling573/eval")
source("~/github/ling573/eval/get_fkre_quantile_reps.R")
source("~/github/ling573/eval/get_fkre_quantile_reps.R")
source("~/github/ling573/eval/get_fkre_quantile_reps.R")
# File for generating analysis plots for ling 573 project
# This file expects to be in the same directory as "gold_lftk.csv" and "gen_lftk.csv"
# Both of these files must have the same columns.
library(tidyr)
library(ggplot2)
library(stringr)
library(dplyr)
# LFTK readability and other metrics of gold and generated summaries on test partition
# gold_lftk.csv and gen_lftk.csv must have to same columns
lftk <- list()
lftk[["gold"]] <- read.csv("gold_lftk.csv")
lftk[['gen']] <- read.csv("gen_lftk.csv")
# Refers to LFTK family of metrics. See README
family <- list()
family$wordsent <- c(
"t_word",
"t_stopword",
"t_punct",
"t_syll",
"t_syll2",
"t_syll3",
"t_uword",
"t_sent",
"t_char"
)
family$readformula <- c(
"fkre",
"fkgl",
"fogi",
"smog",
"cole",
"auto"
)
family$worddiff <- c(
"t_kup",
"t_bry",
"t_subtlex_us_zipf"
)
family$entity <- c(
"t_n_ent_law"
)
# ----------------------------------------------------------------------- #
# ----------------------------------------------------------------------- #
# ---------- Everything Above is Setup. Below Generates Plots ----------- #
# ----------------------------------------------------------------------- #
# ----------------------------------------------------------------------- #
set.seed(20)
num_quantiles = 5
gold_quantiles <- lftk$gold %>% mutate(quantile = ntile(fkre,num_quantiles))
gen_quantiles <- lftk$gen %>% mutate(quantile = ntile(fkre,num_quantiles))
smps_gold <- c()
smps_gen <- c()
for(i in 1:num_quantiles){
df_gold <- gold_quantiles %>% filter(quantile == i)
df_gen <- gen_quantiles %>% filter(quantile == i)
smps_gold <- c(smps_gold,sample(df_gold$X,1))
smps_gen <- c(smps_gen,sample(df_gen$X,1))
}
t_gold <- gold_quantiles %>% filter(X %in% smps_gold)
t2_gold <- t %>% left_join(gen_quantiles,by="X",suffix = c(".GOLD",".GEN"))
t_gen <- gen_quantiles %>% filter(X %in% smps_gen)
?left_joihn
?left_join
smps_gen
smps_gold
source("~/github/ling573/eval/get_fkre_quantile_reps.R")
t2_gold <- t %>% left_join(gen_quantiles,by="X",suffix = c(".GOLD",".GEN"))
t %>% left_join(gen_quantiles,by="X",suffix = c(".GOLD",".GEN"))
source("~/github/ling573/eval/get_fkre_quantile_reps.R")
a <- read.csv("output_rows_where_gold_tword_above250.csv")
View(a)
a_quantiles <- a %>% mutate(quantile = ntile(fkre,5))
a_quantiles <- a %>% mutate(quantile.GOLD = ntile(fkre.GOLD,5),quantile.GEN = ntile(fkre.GEN,5))
View(a_quantiles)
View(a_quantiles)
for(i in 1:5){
}
View(a_quantiles)
a_quantiles <- a %>% mutate(fkre_quantile.GOLD = ntile(fkre.GOLD,5),fkre_quantile.GEN = ntile(fkre.GEN,5))
View(a_quantiles)
as <- c()
for(i in 1:5){
df_gold <- a_quantiles %>% filter(fkre_quantile.GOLD == i)
df_gen <- a_quantiles %>% filter(fkre_quantile.GEN == i)
as <- c(as,sample(df_gold$X,1))
as <- c(as,sample(df_gen$X,1))
}
as
len(as)
length(as)
a <- read.csv("output_rows_where_gold_tword_above250.csv")
a_quantiles <- a %>% mutate(fkre_quantile.GOLD = ntile(fkre.GOLD,5),fkre_quantile.GEN = ntile(fkre.GEN,5))
View(a_quantiles)
as <- c()
for(i in 1:5){
df_gold <- a_quantiles %>% filter(fkre_quantile.GOLD == i)
df_gen <- a_quantiles %>% filter(fkre_quantile.GEN == i)
as <- c(as,sample(df_gold$X,1))
as <- c(as,sample(df_gen$X,1))
}
as
source("~/github/ling573/eval/get_fkre_quantile_reps.R")
source("~/github/ling573/eval/get_fkre_quantile_reps.R")
a_quantiles %>% filter(X %in% gold_quants) %>%
write.csv(file = "samples_where_gold_tword_above250.csv")
