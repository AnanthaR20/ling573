setwd("~/github/ling573/eval")
# Anantha Rao
# File for generating analysis plots for ling 573 project
# This file expects to be in the same directory as "gold_lftk.csv" and "gen_lftk.csv"
# Both of these files must have the same columns.
library(tidyr)
library(ggplot2)
library(stringr)
library(dplyr)
# LFTK readability and other metrics of gold and generated summaries on test partition
# gold_lftk.csv and gen_lftk.csv must have to same columns
lftk <- list()
lftk[["gold"]] <- read.csv("gold_lftk.csv")
lftk[['gen']] <- read.csv("gen_lftk.csv")
j <- lftk$gold %>% left_join(lftk$gen,by="X",suffix=c(".GOLD",".GEN"))
bar <- j %>% pivot_longer(cols = colnames(j)[str_detect(colnames(j),"[(GOLD)(GEN)]")])
bar <- bar %>% mutate(metric = str_extract(name,"([^.]*)\\.",group=1),
type = str_extract(name,"\\.(.*)",group=1))
View(bar)
bar %>% ggplot(aes(fill = type))+facet_grid(value~metric)
bar %>% ggplot()+facet_grid(value~metric)
View(bar)
bar %>% ggplot(aes(x=metric,y=value)) + geom_bar()
bar %>% ggplot(aes(x=metric,y=value)) + geom_bar(stat = stat_count())
bar %>% ggplot(aes(x=metric,y=value)) + geom_bar(stat = 'identity')
bar %>% ggplot(aes(x=metric,y=value)) + geom_bar(aes(fill=type),stat = 'identity')
bar %>% ggplot(aes(x=type,y=value)) + geom_bar(aes(fill=metric),stat = 'identity')
bar %>% ggplot(aes(x=type,y=value)) + geom_bar(aes(fill=metric),stat = 'identity',position='dodge')
# Refers to LFTK family of metrics. See README
family <- list()
family$wordsent <- c(
"t_word",
"t_stopword",
"t_punct",
"t_syll",
"t_syll2",
"t_syll3",
"t_uword",
"t_sent",
"t_char"
)
family$readformula <- c(
"fkre",
"fkgl",
"fogi",
"smog",
"cole",
"auto"
)
family$worddiff <- c(
"t_kup",
"t_bry",
"t_subtlex_us_zipf"
)
family$entity <- c(
"t_n_ent_law"
)
bar %>% ggplot(aes(x=type,y=value)) + geom_bar(aes(fill=metric),stat = 'identity',position='dodge')
bar %>% filter(metric %in% family$readformula) %>% ggplot(aes(x=type,y=value)) + geom_bar(aes(fill=metric),stat = 'identity',position='dodge')
bar %>% filter(metric %in% family$readformula) %>% ggplot(aes(x=type,y=value)) + geom_bar(aes(fill=metric),stat = 'identity',position='dodge') + facet_grid()
bar %>% filter(metric %in% family$readformula) %>% ggplot(aes(x=type,y=value)) + geom_bar(aes(fill=metric),stat = 'identity',position='dodge') + facet_wrap()
bar %>% filter(metric %in% family$readformula) %>% ggplot(aes(x=type,y=value)) + geom_bar(aes(fill=metric),stat = 'identity',position='dodge') + facet_grid(value~type)
bar %>% filter(metric %in% family$readformula) %>% ggplot(aes(x=metric,y=value)) + geom_bar(aes(fill=type),stat = 'identity',position='dodge')
bar %>% filter(metric %in% family$readformula) %>% ggplot(aes(x=metric,y=value)) + geom_boxplot(aes(fill=type),stat = 'identity',position='dodge')
bar %>% filter(metric %in% family$readformula) %>% ggplot(aes(x=metric,y=value)) + geom_boxplot(aes(fill=type))
bar %>% filter(metric %in% family$readformula) %>% ggplot(aes(x=metric,y=value)) + geom_boxplot(aes(fill=type)) %>% facet_grid(~metric)
bar %>% filter(metric %in% family$readformula) %>% ggplot(aes(x=metric,y=value)) + geom_boxplot(aes(fill=type)) %>% facet_wrap(~metric)
?facet_grid
bar %>% filter(metric %in% family$readformula) %>% ggplot(aes(x=metric,y=value)) + geom_boxplot(aes(fill=type)) %>% facet_wrap(x=metrics)
bar %>% filter(metric %in% family$readformula) %>% ggplot(aes(x=metric,y=value)) + geom_boxplot(aes(fill=type)) %>% facet_grid(x=metrics)
bar %>% filter(metric %in% family$readformula) %>% ggplot(aes(x=metric,y=value)) + geom_boxplot(aes(fill=type)) %>% facet_grid(rows=metrics)
bar %>% filter(metric %in% family$readformula) %>% ggplot(aes(x=metric,y=value)) + geom_boxplot(aes(fill=type)) %>% facet_grid(rows=metric)
bar %>% filter(metric %in% family$readformula) %>% ggplot(aes(x=metric,y=value)) + geom_boxplot(aes(fill=type)) + facet_grid(rows=metric)
bar %>% filter(metric %in% family$readformula) %>% ggplot(aes(y=value)) + geom_boxplot(aes(fill=type)) + facet_grid(rows=metric)
bar %>% filter(metric %in% family$readformula) %>% ggplot(aes(y=value)) + geom_boxplot(aes(fill=type)) + facet_wrap(~metric)
bar %>% filter(metric %in% family$readformula) %>% ggplot(aes(x=metric,y=value)) + geom_boxplot(aes(fill=type)) + facet_wrap(~metric)
bar %>% filter(metric %in% family$readformula) %>% ggplot(aes(y=value)) + geom_boxplot(aes(fill=type)) + facet_wrap(~metric)
bar %>% filter(metric %in% family$readformula) %>% ggplot(aes(y=value)) + geom_boxplot(aes(fill=type)) + facet_wrap(~metric) + coord_cartesian(ylim = c(-50, 50))
bar %>% filter(metric %in% family$readformula) %>% ggplot(aes(y=value)) + geom_boxplot(aes(fill=type)) + facet_wrap(~metric) + coord_cartesian(ylim = c(-20, 80))
j <- lftk$gold %>% left_join(lftk$gen,by="X",suffix=c(".GOLD",".GEN"))
bar <- j %>% pivot_longer(cols = colnames(j)[str_detect(colnames(j),"[(GOLD)(GEN)]")])
bar <- bar %>% mutate(metric = str_extract(name,"([^.]*)\\.",group=1),
summary_type = str_extract(name,"\\.(.*)",group=1))
# Refers to LFTK family of metrics. See README
family <- list()
family$wordsent <- c(
"t_word",
"t_stopword",
"t_punct",
"t_syll",
"t_syll2",
"t_syll3",
"t_uword",
"t_sent",
"t_char"
)
family$readformula <- c(
"fkre",
"fkgl",
"fogi",
"smog",
"cole",
"auto"
)
family$worddiff <- c(
"t_kup",
"t_bry",
"t_subtlex_us_zipf"
)
family$entity <- c(
"t_n_ent_law"
)
bar %>% filter(metric %in% family$readformula) %>% ggplot(aes(y=value)) + geom_boxplot(aes(fill=type)) + facet_wrap(~metric) + coord_cartesian(ylim = c(-20, 80))
bar %>% filter(metric %in% family$readformula) %>% ggplot(aes(y=value)) + geom_boxplot(aes(fill=summary_type)) + facet_wrap(~metric) + coord_cartesian(ylim = c(-20, 80))
bar %>% filter(metric %in% family$readformula) %>%
ggplot(aes(y=value)) +
geom_boxplot(aes(fill=summary_type)) +
facet_wrap(~metric) +
coord_cartesian(ylim = c(-50, 100)) +
# ----------------------------------------------------------------------- #
# ----------------------------------------------------------------------- #
# ---------- Everything Above is Setup. Below Generates Plots ----------- #
# ----------------------------------------------------------------------- #
# ----------------------------------------------------------------------- #
# (1) Generate plots
for (feature in colnames(lftk$gold)) {
for(fam in names(family)){
if(!(feature %in% family[[fam]])){
next
}
plt <-
ggplot() +
geom_histogram(aes(x=lftk$gold[[feature]],fill='Gold'),bins=60) +
geom_histogram(aes(x=lftk$gen[[feature]], fill='Generated'), alpha=0.55,bins=60) +
# scale_x_continuous(breaks = seq(0,30,5)) +
labs(x = 'Value', y = "Count", title= str_c(feature," for Generated and Gold Summaries")) +
scale_color_manual(name='Legend',
breaks=c("Gold","Generated"),
values = c("Gold"="gold",'Generated'="black"))
# Save plots in right place
path_to_save <- str_c("lftk_plots/",fam,"/")
ggsave(str_c(path_to_save,feature,"_distribution_gen_and_gold_summaries.png"),plt,create.dir = T)
} # ----- End of Attributes loop
} # ----- End of Generate Plots
bar %>% filter(metric %in% family$readformula) %>%
ggplot(aes(y=value)) +
geom_boxplot(aes(fill=summary_type)) +
facet_wrap(~metric) +
coord_cartesian(ylim = c(-50, 100)) +
labs(x = "") +
theme(
axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank()
)
bar %>% filter(metric %in% family$readformula) %>%
ggplot(aes(x = summary_type,y=value)) +
geom_boxplot(aes(fill=summary_type)) +
facet_wrap(~metric) +
coord_cartesian(ylim = c(-50, 100)) +
labs(x = "") +
theme(
axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank()
)
bar %>% filter(metric %in% family$readformula) %>%
ggplot(aes(x = summary_type,y=value)) +
geom_boxplot(aes(fill=summary_type)) +
facet_wrap(~metric) +
coord_cartesian(ylim = c(-50, 100)) +
labs(x = "")
bar %>% filter(metric %in% family$readformula) %>%
ggplot(aes(x = summary_type,y=value)) +
geom_boxplot() +
facet_wrap(~metric) +
coord_cartesian(ylim = c(-50, 100)) +
labs(x = "")
bar %>% filter(metric %in% family$readformula) %>%
ggplot(aes(x = summary_type,y=value)) +
geom_boxplot() +
facet_wrap(~metric) +
coord_cartesian(ylim = c(-50, 100)) +
labs(x = "Summary Type")
bar %>% filter(metric %in% family$readformula) %>%
ggplot(aes(x = summary_type,y=value)) +
geom_boxplot() +
facet_wrap(~metric) +
coord_cartesian(ylim = c(-50, 100)) +
labs(x = "Summary Type",
y = "Value",
title = "Generated vs Gold Summaries")
bar %>% group_by(summary_type,metric) %>% summarize(
average = mean(value),
sd = sd(value)
)
bar %>% group_by(summary_type,metric) %>% summarize(
average = mean(value),
sd = sd(value),
min = min(value),
max(value)
) %>% View
bar %>% filter(metric %in% c('t_sent','t_word','t_char')) %>%
group_by(summary_type,metric) %>% summarize(
average = mean(value),
sd = sd(value),
min = min(value),
max = max(value)
) %>% View
bar %>% filter(metric %in% c('t_sent','t_word','t_char') && summary_type == "GOLD") %>%
group_by(summary_type,metric) %>% summarize(
average = mean(value),
sd = sd(value),
min = min(value),
max = max(value)
) %>% View
bar %>% filter(metric %in% c('t_sent','t_word','t_char') & summary_type == "GOLD") %>%
group_by(summary_type,metric) %>% summarize(
average = mean(value),
sd = sd(value),
min = min(value),
max = max(value)
) %>% View
bar %>% filter(metric %in% c('t_sent','t_word','t_char')) %>%
group_by(summary_type,metric) %>% summarize(
average = mean(value),
sd = sd(value),
min = min(value),
max = max(value)
) %>% View
bar %>% filter(metric %in% c('t_sent','t_word','t_char') & summary_type == "GOLD") %>%
group_by(summary_type,metric) %>% summarize(
average = mean(value),
sd = sd(value),
min = min(value),
max = max(value)
) %>% View
View(family)
